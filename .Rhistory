shiny::runApp()
runApp()
runApp()
runApp()
q()
shiny::runApp()
runApp()
?img
runApp()
?addResourcePath
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gtf <- rtracklayer::import("../../NAD-RNA-seq_human_aging/Homo_sapiens.GRCh38.94.gtf")
gtf <- rtracklayer::import("../../NAD-RNA-seq_human_aging/Homo_sapiens.GRCh38.94.chr.gtf")
gtf
gtf.df <- as.data.frame(gtf)
gtf.df <- subset(gtf.df, type="gene")
gtf.df <- as.data.frame(subset(gtf, type=="gene"))
gene.features <- read.csv("data/gene_features.csv")
View(gene.features)
View(gtf.df)
colnames(gene.features)
colnames(gtf.df)
gtf.df <- gtf.df[,colnames(gene.features)[-1]]
View(gtf.df)
gtf.df$feature_id <- rep(0, nrow(gtf.df))
gene.features <- rbind(gene.features, gtf.df[,colnames(gene.features)])
gene.features$feature_id <- seq(1, nrow(gene.features))
gtf.df$seqnames <- paste0("chr",gtf.df$seqnames)
gene.features <- read.csv("data/gene_features.csv")
gene.features <- rbind(gene.features, gtf.df[,colnames(gene.features)])
gene.features$feature_id <- seq(1, nrow(gene.features))
View(gene.features)
unique(gene.features$seqnames)
gtf.df$anno <- rep("GRCh38.94", nrow(gtf.df))
gene.features <- read.csv("data/gene_features.csv")
gene.features$anno <- rep("GRCm38", nrow(gene.features))
gene.features <- rbind(gene.features, gtf.df[,colnames(gene.features)])
gene.features$feature_id <- seq(1, nrow(gene.features))
gene.features$chr_pos <- paste(gene.features$seqnames, paste(gene.features$start, gene.features$end, sep="-"), sep=":")
View(gene.features)
write.csv(gene.features, file = "data/gene_features.csv", quote = F, row.names = F)
write.csv(gene.features, file = "data/gene_features.csv", quote = F, row.names = F)
View(gene.features)
write.csv(gene.features[,-3], file = "data/gene_features.csv", quote = F, row.names = F)
df1 <- read.csv("data/mm_liver_young.csv")
View(df1)
View(df1)
df1$logCPM <- log2(rowMeans(df1[,6:7]))
View(df1)
write.csv(df1, file = "data/mm_liver_young.csv", quote = F, row.names = F)
df2 <- read.csv("data/mm_liver_aged.csv")
df2$logCPM <- log2(rowMeans(df2[,6:7]))
write.csv(df2, file = "data/mm_liver_aged.csv", quote = F, row.names = F)
df3 <- read.csv("data/mm_liver_agednmn.csv")
df3$logCPM <- log2(rowMeans(df3[,6:7]))
write.csv(df3, file = "data/mm_liver_agednmn.csv", quote = F, row.names = F)
View(gene.features)
View(df1)
View(gene.features)
runApp()
runApp()
runApp()
?req
runApp()
runApp()
runApp()
runApp()
unique(gene.features$gene_biotype)
gene.features$gene_biotype <- gsub(".*pseudogene","",gene.features$gene_biotype)
unique(gene.features$gene_biotype)
gene.features <- read.csv("data/gene_features.csv")
unique(gene.features$gene_biotype)
gene.features$gene_biotype <- gsub(".*pseudogene","pseudogene",gene.features$gene_biotype)
unique(gene.features$gene_biotype)
gene.features$gene_biotype <- gsub("TR.*gene","TR_gene",gene.features$gene_biotype)
gene.features$gene_biotype <- gsub("IG.*gene","IG_gene",gene.features$gene_biotype)
unique(gene.features$gene_biotype)
?br
?box
runApp()
write.csv(gene.features[,-3], file = "data/gene_features.csv", quote = F, row.names = F)
runApp()
View(gene.features)
write.csv(gene.features, file = "data/gene_features.csv", quote = F, row.names = F)
runApp()
?column
runApp()
runApp()
runApp()
View(df1)
str(df1)
runApp()
write.csv(df1, file = "data/mm_liver_young.csv", quote = T, row.names = F)
write.csv(df2, file = "data/mm_liver_aged.csv", quote = T, row.names = F)
write.csv(df3, file = "data/mm_liver_agednmn.csv", quote = T, row.names = F)
runApp()
runApp()
View(df1)
df1$logCPM <- log2(rowMeans(df1[,6:7])+1)
write.csv(df1, file = "data/mm_liver_young.csv", quote = T, row.names = F)
df2$logCPM <- log2(rowMeans(df2[,6:7])+1)
write.csv(df2, file = "data/mm_liver_aged.csv", quote = T, row.names = F)
df3$logCPM <- log2(rowMeans(df3[,6:7])+1)
write.csv(df3, file = "data/mm_liver_agednmn.csv", quote = T, row.names = F)
runApp()
runApp()
runApp()
runApp()
?dataTableOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
q()
shiny::runApp()
# Define the available datasets
datasets <- read.csv("data/phenoData.csv")
View(datasets)
num_cellline <- sum(unique(datasets$cell_line) != "NULL")
# number of tissues and cell line
num_tissue <- sum(unique(datasets$tissue) != "NULL")
num_tc <- num_tissue + num_cellline
shiny::runApp()
nad_dat <- read.csv(paste0("data/","hg_pbmc_old.csv"))
View(nad_dat)
gene_anno <- read.csv("data/gene_features.csv")
})
# Combine data with associated gene annotation
nad_dat <- nad_dat %>% left_join(gene_anno, by="gene_id")
View(nad_dat)
gene.features <- read.csv("data/gene_features.csv")
View(gene.features)
# add dog annotation data
gtf <- rtracklayer::import("../../NAD-RNA-seq_20220801/Canis_lupus_familiaris.ROS_Cfam_1.0.106")
# add dog annotation data
gtf_cf <- rtracklayer::import("../../NAD-RNA-seq_20220801/Canis_lupus_familiaris.ROS_Cfam_1.0.106.gtf")
gene_cf <- as.data.frame(subset(gtf_cf, type=="gene"))
gene_cf$feature_id <- rep(0, nrow(gene_cf))
gene_cf$seqnames <- paste0("chr",gene_cf$seqnames)
gene_cf$anno <- rep("GRCh38.94", nrow(gene_cf))
gene.features <- rbind(gene.features, gtf.df[,colnames(gene.features)])
gene.features <- rbind(gene.features, gene_cf[,colnames(gene.features)])
View(gene.features)
View(gene_cf)
gene.features <- gene.features[,-10]
gene.features <- rbind(gene.features, gene_cf[,colnames(gene.features)])
gene.features$feature_id <- seq(1, nrow(gene.features))
gene.features$chr_pos <- paste(gene.features$seqnames, paste(gene.features$start, gene.features$end, sep="-"), sep=":")
gene.features$gene_biotype <- gsub(".*pseudogene","pseudogene",gene.features$gene_biotype)
gene.features$gene_biotype <- gsub("TR.*gene","TR_gene",gene.features$gene_biotype)
gene.features$gene_biotype <- gsub("IG.*gene","IG_gene",gene.features$gene_biotype)
table(gene.features$gene_biotype)
write.csv(gene.features, file = "data/gene_features.csv", quote = F, row.names = F)
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?zip
runApp()
runApp()
?grepl
requireNamespace("enONE")
devtools::install_github("thereallda/enONE")
devtools::install_github("thereallda/enONE")
rsconnect::setAccountInfo(name='lida',
token='E1DA6D8130F665176CF46FAEF1AF2C05',
secret='<SECRET>')
devtools::install_github("rstudio/rsconnect")
rsconnect::setAccountInfo(name='lida',
token='E1DA6D8130F665176CF46FAEF1AF2C05',
secret='<SECRET>')
devtools::install_github("rstudio/rsconnect")
rsconnect::setAccountInfo(name='lida',
token='E1DA6D8130F665176CF46FAEF1AF2C05',
secret='0Pyk01lHnyfdhkUORTa5KzIzoR8tAvmwNHmFMfBn')
rsconnect::deployApp()
?rsconnect::deployApp()
rsconnect::deployApp(appName = "NADepot")
rsconnect::deployApp(appName = "NADepot")
rsconnect::deployApp(appName = "NADepot")
q()
